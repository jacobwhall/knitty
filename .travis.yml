# Only build PRs or tags
# if: (type = pull_request) OR (tag IS present)

os:
  # - windows
  - linux
  # - osx

dist: xenial

language: shell

notifications:
  email: false

git:
  submodules: false

# Install packages
install:
  - _py_ver="3.7"
  - |
    if [ "$TRAVIS_OS_NAME" = 'windows' ]; then
        choco install miniconda3
        _pref="/c/tools/miniconda3"
        export PATH="$_pref:$_pref/Scripts:$_pref/condabin:$PATH"
    elif [ "$TRAVIS_OS_NAME" = 'osx' ]; then
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        export PATH="$HOME/miniconda/bin:$PATH"
    else
        sudo apt-get update
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        export PATH="$HOME/miniconda/bin:$PATH"
    fi
  - hash -r
  - source activate base
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - conda config --add channels defaults
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - conda create -q -n test-environment "python=$_py_ver" "pip>=10.0.1" "knitty>=0.5.5" pytest pytest-cov pandas matplotlib nose r-knitr r-reticulate ipykernel notebook
  - source activate test-environment
  - conda remove -q knitty
  - jupyter kernelspec list
  - pip install -e .[dev]

# Run test
script:
  - "knotedown --help"
  - "pandoc-filter-arg --help"
  - "pre-knitty --help"
  - "knitty --help"
  - "pandoc-filter-arg -o doc.pdf"
  - |
    printf "@{eval=True, echo=True}\n\`\`\`python\nprint(0)\n\`\`\`\n" |
    pre-knitty |
    pandoc -t json |
    knitty markdown |
    pandoc -f json -t markdown
  - |
    printf "![Caption](https://avatars0.githubusercontent.com/u/11897326?s=70&v=4)" |
    pandoc -t json |
    panfl -t markdown knitty.self_contained_raw_html_img |
    pandoc -f json -t markdown
  - "py.test tests --cov=knitty --cov-report html --run-slow tests/"
